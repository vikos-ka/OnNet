{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","authReducer","withAuthRedirect","Component","connect","props","to","module","exports","Dialog","path","id","className","style","dialog","name","Message","message","maxLength50","maxLengthcreator","NewMessageFormRedux","reduxForm","form","newMessage","onSubmit","handleSubmit","text_area","Field","component","Textarea","validate","required","placeholder","type","class","Dialogs","dialogsPage","dialogItems","dialogs","map","messageItems","messages","messagesAndDialogs","message__Item","values","sendMessage","newMessageBody","compose","dispatch","action","sendMessageActionCreator"],"mappings":"gGAAA,sEAIMA,EAA0B,SAACC,GAAD,MAAY,CACxCC,OAAQD,EAAME,YAAYD,SAGjBE,EAAmB,SAACC,GAO7B,OAFqCC,YAAQN,EAARM,EAJX,SAACC,GACvB,OAAKA,EAAML,OACJ,kBAACG,EAAcE,GADI,kBAAC,IAAD,CAAUC,GAAI,gB,oBCThDC,EAAOC,QAAU,CAAC,mBAAqB,oCAAoC,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,0B,oJCYzNC,EAPA,SAACJ,GACZ,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKC,UAAaC,IAAMC,QAAxB,IAAiC,kBAAC,IAAD,CAASR,GAAMI,GAAOL,EAAMU,Q,kBCGtDC,EARC,SAACX,GAEb,OACI,yBAAKO,UAAaC,IAAMI,SAAUZ,EAAMY,U,0CCG1CC,EAAcC,YAAiB,IAqD/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAChB,GAChB,OACA,0BAAMO,UAAaC,IAAMU,WAAYC,SAAYnB,EAAMoB,cAEnD,yBAAKb,UAAYC,IAAMa,WACnB,kBAACC,EAAA,EAAD,CAAOC,UAAaC,IAAUC,SAAY,CAAEC,IAAUb,GAAcH,KAAO,iBAC3EiB,YAAY,oBACX,4BAAQC,KAAM,UAAU,uBAAGC,MAAM,8BAQnCC,EArDC,SAAC9B,GAGb,IAAIN,EAAQM,EAAM+B,YAGdC,EAActC,EAAMuC,QAAQC,KAAK,SAAAzB,GAAM,OACvB,kBAAC,EAAD,CAAQH,GAAMG,EAAOH,GAAII,KAAQD,EAAOC,UACxDyB,EAAezC,EAAM0C,SAASF,KAAK,SAAAtB,GAAO,OAC1B,kBAAC,EAAD,CAASN,GAAMM,EAAQN,GAAIM,QAAWA,EAAQA,aAQlE,OAAKZ,EAAML,OAGP,6BAASY,UAAaC,IAAM6B,oBAExB,yBAAK9B,UAAaC,IAAMwB,aAEpB,uCACCA,GAGL,yBAAKzB,UAAaC,IAAM4B,UACpB,wCACA,yBAAK7B,UAAaC,IAAM8B,eAAgBH,GACpC,kBAACpB,EAAD,CAAqBI,SAnBf,SAACoB,GACnBvC,EAAMwC,YAAYD,EAAOE,qBAIH,kBAAC,IAAD,CAAUxC,GAAI,Y,iCCJ7ByC,sBACX3C,aAjBoB,SAACL,GAErB,MAAO,CACHqC,YAAarC,EAAMqC,gBAIA,SAACY,GACxB,MAAO,CACHH,YAAa,SAACC,GACV,IAAMG,EAASC,YAAyBJ,GACxCE,EAASC,QAOjB/C,IAFW6C,CAGbZ","file":"static/js/4.63461de8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />;\r\n        return <Component {...props}/>\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesAndDialogs\":\"Dialogs_messagesAndDialogs__2KDZF\",\"dialogItems\":\"Dialogs_dialogItems__1eNyT\",\"messages\":\"Dialogs_messages__3_gvz\",\"dialog\":\"Dialogs_dialog__34PDa\",\"message\":\"Dialogs_message__2YSBT\",\"active\":\"Dialogs_active__M_iLS\"};","import React from 'react';\r\nimport style from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className = {style.dialog}> <NavLink to = {path}>{props.name}</NavLink></div>\r\n    ) \r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className = {style.message}>{props.message}</div>\r\n    ) \r\n};\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/Forms';\r\nimport {required, maxLengthcreator} from '../../utils/validators/validators'\r\n\r\n\r\nconst maxLength50 = maxLengthcreator(50);\r\n\r\nconst Dialogs = (props) => { \r\n    debugger;\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogItems = state.dialogs.map( dialog => \r\n                        <Dialog id = {dialog.id} name = {dialog.name}/>)\r\n    let messageItems = state.messages.map( message => \r\n                        <Message id = {message.id} message = {message.message} />)\r\n\r\n\r\n    const addNewMessage = (values) =>{\r\n        props.sendMessage(values.newMessageBody)\r\n        \r\n      \r\n    }\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <section className = {style.messagesAndDialogs}>\r\n            \r\n            <div className = {style.dialogItems}>\r\n\r\n                <h2>Dialogs</h2>\r\n                {dialogItems} \r\n            </div>\r\n\r\n            <div className = {style.messages}>\r\n                <h2>Messages</h2>\r\n                <div className = {style.message__Item}>{messageItems}</div>\r\n                    <NewMessageFormRedux onSubmit = {addNewMessage}/>            \r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\n\r\nconst NewMessageForm = (props) => {\r\n        return (\r\n        <form className = {style.newMessage} onSubmit = {props.handleSubmit}>\r\n\t\t\t\r\n            <div className ={style.text_area}>\r\n                <Field component = {Textarea} validate = {[ required, maxLength50]} name = \"newMessageBody\" \r\n                placeholder=\"Write a message\" />\r\n                 <button type= \"submit\" ><i class=\"fa fa-paper-plane-o\"></i></button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst NewMessageFormRedux = reduxForm({form: 'dialogNewMessageForm'})(NewMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs'\r\nimport {sendMessageActionCreator} from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            const action = sendMessageActionCreator(newMessageBody);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);  \r\n"],"sourceRoot":""}