{"version":3,"sources":["components/common/Forms.jsx","redux/dialogsReducer.js","redux/usersReducer.js","api/api.js","hoc/withAuthRedirect.js","components/Profile/Profile.module.css","assets/img/loader.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","redux/profileReducer.js","redux/friendsReducer.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Login/Login.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatuswithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.jsx","index.js","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/preloader.jsx","components/Profile/MyPosts/Post/Post.module.css","assets/img/user.png","utils/validators/validators.js","App.module.css","components/common/Forms.module.css"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","style","form__control","children","CreateField","placeholder","name","validator","component","text","olaceholder","Textarea","restProps","Input","checkedLabel","htmlFor","initialState","dialogs","id","messages","message","sendMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","body","FOLLOW","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","page","dispatch","a","userAPI","getUsers","response","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","data","resultCode","follow","bind","unfollow","usersReducer","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","post","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","mapStateToPropsRedirect","isAuth","authReducer","withAuthRedirect","Component","connect","to","module","exports","ADD_POST","posts","like","comment","setStatus","getUserProfileThunk","profileReducer","newPost","Math","ceil","random","newPostText","postId","photos","friends","ava","friendsReducer","usersId","setAuthUserData","authUserThunk","logoutThunk","payload","initialised","appReducer","reducers","combineReducers","profilePage","dialogsPage","friendsPage","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","header__container","logo","serviceBar","topSearch","method","searchBtn","login__block","onClick","HeaderContainer","this","React","Navbar","nav","item","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","validate","required","value","src","alt","loginThunk","length","stopSubmit","_error","getCaptchaThunk","url","Post","useState","count","setCount","postAndAuthor","postAuthor","userPhoto","postText","likeComment","AddNewPostFormRedux","postBox","liItems","btn","MyPosts","memo","postsItems","key","reverse","values","addPost","postItems","MyPostsContainer","addPostActionCreator","ProfileStatuswithHooks","editMode","setEditMode","useEffect","profile__status","onDoubleClick","profile__statusEdit","onChange","e","currentTarget","onBlur","autoFocus","ReduxProfileForm","Object","keys","contacts","Contact","contactTitle","contactValue","contact","ProfileData","isOwner","activateEdit","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","your__page","user__photo","large","target","files","aria-describedby","user__info","initialValues","Profile","ProfileContainer","match","params","authorisedUserId","history","push","getStatusThunk","prevProps","prevState","snapshot","refreshProfile","savePhotoThunk","updateStatusThunk","getState","withRouter","DialogsContainer","lazy","UsersContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","console","initialiseThunk","addEventListener","removeEventListener","wrapper","wrapperContent","exact","path","render","fallback","Preloader","preloaderWrapper","AppContainer","promise","Promise","all","MainApp","basename","process","ReactDOM","document","querySelector","loader","maxLengthcreator","maxLength"],"mappings":"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","file":"static/js/main.cd5ac579.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './Forms.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError =  meta.touched && meta.error;\r\n    return (\r\n        <div className = {style.form__control + \" \" + (hasError? style.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validator, component, props = {}, text = '') => {\r\n    return <div>\r\n        <Field olaceholder = {placeholder} \r\n        name = {name} \r\n        validator = {validator}\r\n        component = {component} \r\n        {...props} /> {text}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props} >\r\n        <textarea className=\"form-control\" {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input className = \"form-control\" {...input} {...restProps} />\r\n        <label className = {style.checkedLabel} htmlFor =\"rememberMe\"></label>\r\n    </FormControl>\r\n}","const SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\n\r\nconst initialState = {\r\n\r\n    dialogs: [{\r\n        id: 1, name: \"Max\"\r\n    },\r\n    {\r\n        id: 2, name: \"Oliver\"\r\n    },\r\n    {\r\n        id: 3, name: \"Andrew\"\r\n    },\r\n    {\r\n        id: 4, name: \"Mike\"\r\n    },\r\n    {\r\n        id: 5, name: \"Tom\"\r\n    },\r\n    {\r\n        id: 6, name: \"Miles\"\r\n    },\r\n    {\r\n        id: 7, name: \"Vika\"\r\n    },\r\n],\r\n\r\nmessages: [{\r\n        id: 1, message: \"Hello\"\r\n    },\r\n    {\r\n        id: 2, message: \"Hi\"\r\n    },\r\n    {\r\n        id: 3, message: \"Yo\"\r\n    },\r\n    {\r\n        id: 4,\r\n        message: \"How are you\"\r\n    },\r\n    {\r\n        id: 5, message: \"What's up\"\r\n    },\r\n    {\r\n        id: 6, message: \"Miles\"\r\n    },\r\n    {\r\n        id: 7, message: \"Vika\"\r\n    },\r\n]\r\n}\r\n\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6,\r\n                    message: body}]\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\n\r\nexport default dialogsReducer;","import { userAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'users/FOLLOWING_IN_PROGRESS'\r\n\r\n\r\n\r\nconst initialState = {\r\n    users: [\r\n    ],\r\n    pageSize: 9,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {...state, \r\n                            users: state.users.map( u => {\r\n                                if (u.id === action.userId) {\r\n                                    return {...u, \r\n                                        followed: true}\r\n                                }\r\n                                return u;\r\n                            })\r\n                }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {...state, \r\n                     users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, \r\n                            followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        \r\n        case FOLLOWING_IN_PROGRESS: {\r\n            return {...state, followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id !== action.userId)}\r\n        } \r\n\r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\n\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\nexport const toggleIsFetching = (isFetching) =>({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) =>({type: FOLLOWING_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => {\r\n return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    const response = await userAPI.getUsers(page, pageSize)\r\n        \r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n    }\r\n};\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        const response = await apiMethod(userId)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(actionCreator( userId ));\r\n            }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n }\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess );\r\n    }\r\n\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess );\r\n        }\r\n}\r\n\r\n\r\nexport default usersReducer;","import * as axios from 'axios'\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{'API-KEY': '9929cf51-9531-43cd-b9e4-397389514684'}\r\n});\r\n\r\n\r\nexport const userAPI = {\r\n    \r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                    .then(response => {return response.data});\r\n    },\r\n\r\n    follow(userId) {\r\n       return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n       return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n \r\n\r\nexport const profileAPI = {\r\n    \r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status } )\r\n    },\r\n\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file)\r\n        return instance.put(`profile/photo`, formData,  { headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        } \r\n        })\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile )\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe= false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n   \r\n} \r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />;\r\n        return <Component {...props}/>\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Profile_cover__3DZr0\",\"profile\":\"Profile_profile__2uWf3\"};","module.exports = __webpack_public_path__ + \"static/media/loader.144c7166.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__w8uGf\",\"your__page\":\"ProfileInfo_your__page__1APO_\",\"user__photo\":\"ProfileInfo_user__photo__2Y2h7\",\"profile__info\":\"ProfileInfo_profile__info__2PNw7\",\"load-image\":\"ProfileInfo_load-image__ju4xL\",\"profile__status\":\"ProfileInfo_profile__status__3dqkg\",\"user__info\":\"ProfileInfo_user__info__2-sCn\",\"contact\":\"ProfileInfo_contact__1WYf8\",\"editForm\":\"ProfileInfo_editForm__3eRnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1zlGi\",\"item\":\"Navbar_item__2cd5F\"};","import { userAPI, profileAPI } from '../api/api';\r\n\r\nimport { stopSubmit } from 'redux-form';\r\n\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst DELETE_POST = 'profile/DELETE-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst SET_USER_PHOTO = 'profile/SET_USER_PHOTO';\r\n\r\nconst initialState = {\r\n    posts: [{\r\n        id: 1,\r\n        message: \"Hi! How are you?\",\r\n        like: 5,\r\n        comment: 10\r\n    },\r\n    {\r\n        id: 2,\r\n        message: \"It's my React App\",\r\n        like: 40,\r\n        comment: 1\r\n    },\r\n    {\r\n        id: 3,\r\n        message: \"Some text\",\r\n        like: 12,\r\n        comment: 9999\r\n    },\r\n    {\r\n        id: 4,\r\n        message: \"Hola, amigos!\",\r\n        like: 3,\r\n        comment: 5\r\n    }\r\n],\r\n\r\nprofile: null,\r\nstatus: ''\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: Math.ceil(Math.random() * 100)+ 8,\r\n                message: action.newPostText,\r\n                like: 12,\r\n                comment: 9999,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return{\r\n                ...state,\r\n                posts: state.posts.filter( post => post.id !== action.postId)\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_USER_PHOTO: {\r\n            return {\r\n                ...state,\r\n               profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const deletePostActionCreator = (postId) => ({ type: DELETE_POST, postId });\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE, profile\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS, status\r\n});\r\n\r\nexport const setUserPhoto = (photos) => ({\r\n    type: SET_USER_PHOTO, photos\r\n});\r\n\r\n\r\nexport const getUserProfileThunk = (userId) => \r\n    async (dispatch) => {\r\n    const response =  await userAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n};\r\n\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n  \r\n    const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n\r\n};\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));}\r\n        \r\n}\r\n\r\nexport const savePhotoThunk = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setUserPhoto(response.data.data.photos));}\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().authReducer.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(getUserProfileThunk(userId));\r\n    } else {\r\n        const message = response.data.messages.length > 0? response.data.messages[0] : 'some error';\r\n        dispatch(stopSubmit(\"editProfile\", {_error: message}))\r\n      }  \r\n\r\n};\r\n\r\n\r\nexport default profileReducer;"," \r\n let initialState = {\r\n \r\n        friends: [\r\n            {\r\n                id: 1,\r\n                name: \"Max\",\r\n                ava: \"https://klike.net/uploads/posts/2019-06/1561878174_4.jpg\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Oliver\",\r\n                ava: \"https://klike.net/uploads/posts/2019-06/1561878099_15.jpg\"\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"Andrew\",\r\n                ava: \"https://klike.net/uploads/posts/2019-06/1561878174_4.jpg\"\r\n            },\r\n            {\r\n                id: 4,\r\n                name: \"Mike\",\r\n                ava: \"https://klike.net/uploads/posts/2019-06/1561878096_2.jpg\"\r\n            },\r\n            {\r\n                id: 5,\r\n                name: \"Tom\",\r\n                ava: \"https://www.meme-arsenal.com/memes/b1960e7d08b8a78c37bfce0dfb980651.jpg\"\r\n            },\r\n            {\r\n                id: 6,\r\n                name: \"Miles\",\r\n                ava: \"https://klike.net/uploads/posts/2019-06/1561878099_15.jpg\"\r\n            }  \r\n        ]\r\n}\r\n\r\n \r\n \r\n const friendsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default friendsReducer","import {authAPI, securityAPI} from '../api/api'\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL = 'auth/GET_CAPTCHA_URL';\r\n\r\nconst initialState = {\r\n    usersId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captcha: null \r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, \r\n                ...action.data,\r\n                isAuth: true}\r\n        }\r\n\r\n        case GET_CAPTCHA_URL: {\r\n            return {...state, \r\n                ...action.payload}\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, data: { userId, email, login, isAuth }});\r\n\r\nexport const getCaptcha = (captcha) => ({type: GET_CAPTCHA_URL, data: { captcha }});\r\n\r\nexport const authUserThunk = () => async (dispatch) => {\r\n   const response = await authAPI.me();\r\n    if (response.data.resultCode ===0) {\r\n      const {id, email, login} = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }   \r\n}\r\n\r\nexport const loginThunk = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    \r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode ===0) {\r\n        dispatch(authUserThunk());\r\n    } else  {\r\n\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha());\r\n        }\r\n      const message = response.data.messages.length > 0? response.data.messages[0] : 'some error'\r\n      dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\n\r\nexport const getCaptchaThunk = () => async (dispatch) => {\r\n    \r\n    const response = await securityAPI.getCaptcha();\r\n    const captcha = response.data.url;\r\n    \r\n    dispatch(getCaptcha(captcha));\r\n\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode ===0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }   \r\n}\r\n\r\nexport default authReducer;","import {authUserThunk} from './authReducer'\r\n\r\nconst INITIALISED_SUCCESS = 'app/INITIALISED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialised: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALISED_SUCCESS: {\r\n            return {...state, \r\n                initialised: true}\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialisedSuccess = () => ({type:INITIALISED_SUCCESS});\r\n\r\nexport const initialiseThunk = () => (dispatch) => {\r\n    const promise = dispatch(authUserThunk());\r\n    Promise.all([promise])\r\n    .then( () => dispatch(initialisedSuccess()))\r\n     \r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport friendsReducer from './friendsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer'\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './appReducer';\r\n\r\nconst reducers = combineReducers(\r\n    {profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer, \r\n    friendsPage: friendsReducer, \r\n    usersPage: usersReducer, \r\n    authReducer: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\napplyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className = {style.header__container}>\r\n          <div className = {style.logo}>\r\n            <span><i className=\"fas fa-power-off\"></i>nNet</span>\r\n          </div>\r\n\r\n          <div className = {style.serviceBar}>\r\n            <div className={style.topSearch}>\r\n              <form action=\"\" method=\"#\">\r\n                <input type=\"text\" placeholder = \"Search People, Groups, Pages etc\"/>\r\n                <button id = {style.searchBtn}>\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        <div className={style.login__block}>\r\n            {props.isAuth \r\n            ? <div className = {style.login}><span>{props.login}</span><button className =\"btn btn-primary\" onClick = {props.logoutThunk}>Logout</button></div>\r\n            : <NavLink to = {'/login'}><button className =\"btn btn-primary\">Login</button></NavLink>}\r\n        </div>\r\n      </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logoutThunk} from '../../redux/authReducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.authReducer.isAuth,\r\n  login: state.authReducer.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(HeaderContainer);","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n      \r\n        <nav className = {style.nav}>\r\n          <ul>\r\n          <li className = {style.item}><NavLink to=\"/profile\"><i className=\"fas fa-user-circle\"></i>My profile</NavLink></li>\r\n          <li className = {style.item}><NavLink to=\"/dialogs\"><i className=\"fas fa-envelope\"></i>Dialogs</NavLink></li>\r\n          <li className = {style.item}><NavLink to=\"/friends\"><i className=\"fas fa-user-friends\"></i>Friends</NavLink></li>\r\n          <li className = {style.item}><NavLink to = \"/users\"><i className=\"fas fa-users\"></i>Find Users</NavLink></li>\r\n          <li className = {style.item}><NavLink to=\"/news\"><i className=\"fas fa-rss\"></i>News</NavLink></li>\r\n          <li className = {style.item}><NavLink to=\"/music\"><i className=\"fas fa-headphones-alt\"></i>Music</NavLink></li>\r\n          <li className = {style.item}><NavLink to =\"/settings\"><i className=\"fas fa-cogs\"></i>Settings</NavLink></li>\r\n        </ul>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, CreateField } from '../common/Forms';\r\n\r\nimport './Login.css';\r\n\r\nimport {required} from '../../utils/validators/validators';\r\nimport { loginThunk, logoutThunk, getCaptchaThunk } from '../../redux/authReducer'\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className =\"row\">\r\n                <div className=\"col-md-offset-3 col-md-6\">\r\n                    <form className=\"form-horizontal\" onSubmit = {props.handleSubmit}> \r\n                        <h2 className =\"heading\" >Login Page</h2>\r\n                        <div className=\"form-group\">\r\n                            <Field className = \"form-control\" component= {Input} validate = {[required]} name=\"email\" type=\"email\" id=\"login\" placeholder=\"Your email\" />\r\n                            <i className =\"fa fa-user\"></i>\r\n                        </div>\r\n                        <div className=\"form-group help\">\r\n                            <Field  className= \"form-control\"component= {Input} validate = {[required]}type=\"password\" name=\"password\" id=\"pass\" placeholder=\"Password\" />\r\n                            <i className=\"fa fa-lock\"></i>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"main-checkbox\" id=\"checkbox\">\r\n                                <Field \r\n                                value= \"none\"\r\n                                component= {Input} type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" \r\n                               />\r\n                            </div>\r\n                            <span className =\"text\">Remember Me</span>\r\n\r\n            { props.captcha && <img src = {props.captcha} alt = \"captcha\"/>}\r\n\r\n            { props.captcha && CreateField ('Symbols', 'captcha', [required], Input)}\r\n\r\n            {props.error && <div>{props.error}</div>}\r\n\r\n                <div>\r\n                <button id = \"loginBtn\" className=\"btn  btn-default\" type=\"submit\">Login</button>\r\n                </div>\r\n                </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to = {'/profile'} />\r\n    }\r\n    return <div className = \"form__container\">\r\n        <ReduxLoginForm onSubmit = {onSubmit} captcha = {props.captcha} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        captcha: state.authReducer.captcha,\r\n        isAuth: state.authReducer.isAuth}\r\n)\r\n\r\nexport default connect(mapStateToProps, {loginThunk, logoutThunk, getCaptchaThunk})(Login);","import React, { useState } from 'react';\r\nimport style from './Post.module.css';\r\nimport placeholder from '../../../../assets/img/user.png';\r\n\r\nconst Post = (props) => {\r\n    \r\n    const [count, setCount] = useState(props.like);\r\n    return(\r\n        \r\n    \r\n        <div className= {style.post}>\r\n            <div className = {style.postAndAuthor}>\r\n                <img className = {style.postAuthor} src = {props.userPhoto || placeholder} alt=\"Author\"/>\r\n                <div className = {style.postText}> \r\n                    <p>{props.message}</p> \r\n                </div>\r\n            </div>\r\n            <div className = {style.likeComment}>\r\n                <span onClick = {() => setCount(count + 1)}><i className=\"fas fa-heart\"></i> {count}</span>\r\n                <span><i className=\"fas fa-comment-dots\"></i> { props.comment}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/Forms';\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <div className={style.newPost}>\r\n                \r\n                <div className= {style.postBox}>\r\n                    <h5 id=\"createPost\">Create Post</h5>\r\n                    <form onSubmit = {props.handleSubmit}>\r\n\t\t\t            <Field component = {Textarea} name =\"newPostText\" placeholder=\"Share some what you are thinking?\" />\r\n                    <ul className = {style.liItems}>\r\n                        <li>\r\n\t\t\t\t\t\t<i className=\"fa fa-map-marker\" />\r\n\t\t\t\t\t    </li>\r\n\t\t\t\t\t    <li>\r\n\t\t\t\t\t\t    <i className=\"fa fa-music\" />\r\n\t\t\t\t\t    </li>\r\n\t\t\t\t\t    <li>\r\n\t\t\t\t\t\t    <i className=\"fa fa-image\" />\r\n\t\t\t\t\t    </li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t    <i className=\"fa fa-video-camera\" />\r\n\t\t\t\t\t    </li>\r\n\t\t\t\t\t    <li>\r\n\t\t\t\t\t\t    <i className=\"fa fa-camera\" />\r\n\t\t\t\t\t    </li>\r\n\t\t\t\t</ul>\r\n                <button className= \"btn btn-outline-primary\" id = {style.btn} type = \"submit\">Post</button>\r\n                </form></div>\r\n         </div>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    const postsItems = props.posts.map( post => \r\n                        <Post \r\n                            id = {post.id} \r\n                            message = {post.message} \r\n                            like = {post.like} \r\n                            comment = {post.comment}\r\n                            key = {post.id} \r\n                            \r\n                        />).reverse();\r\n\r\n    const onAddPost = (values) => {  \r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return(\r\n        <div className ={style.posts}>\r\n            <AddNewPostFormRedux onSubmit = {onAddPost}/>\r\n        <div className = {style.postItems}>\r\n            {postsItems}\r\n        </div>\r\n        </div>    \r\n    );\r\n})\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts'\r\nimport { addPostActionCreator} from '../../../redux/profileReducer'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }  \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            const action = addPostActionCreator(newPostText);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst ProfileStatuswithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEdit = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEdit = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n         <> \r\n             {!editMode && \r\n                 <div className = {style.profile__status }>\r\n                    <i className=\"fas fa-comment\"></i><span onDoubleClick = {activateEdit}>{props.status \r\n                    || 'No status'}</span>\r\n                 </div>\r\n                }\r\n            {editMode && \r\n                <div className = {style.profile__statusEdit }> \r\n                    <input onChange = {onStatusChange} onBlur = {deActivateEdit} autoFocus = {true} type=\"text\"\r\n                    value = {status} />\r\n                 </div>\r\n                }\r\n            </>\r\n        );\r\n}\r\n\r\nexport default ProfileStatuswithHooks","import React from 'react';\r\nimport { Input, CreateField, Textarea } from '../../common/Forms';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n          <div className=\"editForm form-group\">{error && <div>{error}</div>}\r\n          <div>\r\n            {CreateField ('Full name', 'fullName', [], Input)}\r\n          </div>\r\n          <div>\r\n            { CreateField('', 'lokingForAJob', [], Input, {type: 'checkbox', className: 'form-check-input'}) }\r\n            <span>Looking for a job</span>\r\n          </div>\r\n          <div>\r\n            { CreateField('My professional skills', 'lookingForAJobDescription', [], Textarea ) }\r\n          </div>\r\n          <div>\r\n              { CreateField('About me', 'aboutMe', [], Textarea ) }\r\n          </div>\r\n        <div><span>Contacts:</span> </div>\r\n          {Object.keys(profile.contacts)\r\n            .map( (key) => {\r\n              return <div key = {key}>\r\n                <span>{key}: </span>\r\n                {CreateField(key, 'contacts.' + key, [], Input)}\r\n              </div>\r\n               }\r\n           )}\r\n           <button className=\"btn btn-outline-primary btn-lg mt-3\">save</button>\r\n           </div>\r\n       </form>\r\n    )\r\n  }\r\n\r\nconst ReduxProfileForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm)\r\n\r\nexport default ReduxProfileForm","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, activateEdit }) => {\r\n    return ( \r\n       <>\r\n        <div>\r\n          <i className=\"fas fa-user\"></i>\r\n          <span>Full name:</span> {profile.fullName}\r\n        </div>\r\n        <div><i className=\"fas fa-briefcase\"></i>\r\n        <span>Looking for a job:</span>\r\n          {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob && \r\n          <div><i className=\"fas fa-exclamation\"></i>\r\n            <span>My proffesional skills:</span> {profile.lookingForAJobDescription}</div>}\r\n        <div>\r\n        <i className=\"fas fa-info-circle\"></i>\r\n          <span>About me: </span>{profile.aboutMe }\r\n        </div>\r\n        <div>\r\n          <span>Contacts:</span>\r\n          {Object.keys(profile.contacts)\r\n            .map( (key) => {\r\n              return <Contact className = \"ml-6 contact\" key = {key}\r\n                contactTitle = {key} \r\n                contactValue = {profile.contacts[key]}\r\n                /> }\r\n           )}\r\n        </div>\r\n        {isOwner && <div><button className=\"btn btn-outline-primary btn-lg mt-3 ml-4\" onClick = {activateEdit} >Edit</button></div>}\r\n      </>\r\n    )\r\n  }\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className = {style.contact} ><i className = {contactTitle ==='mainLink' || contactTitle === \"website\" ? 'fas fa-share-alt' : `fab fa-${contactTitle}`}></i><span>{contactTitle} </span>: {contactValue}</div>\r\n }\r\n\r\nexport default ProfileData;","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader';\r\nimport placeholder from '../../../assets/img/user.png';\r\nimport ProfileStatuswithHooks from './ProfileStatuswithHooks';\r\nimport ProfileDataForm from './ProfileDataForm'\r\nimport ProfileData from './ProfileData'\r\n\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner,updateStatus, status, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEdit = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const mainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (formData) => {\r\n    await saveProfile(formData);\r\n    setEditMode(false);\r\n  }\r\n\r\n    return(\r\n  \r\n        <div className = { style.profile }>\r\n\t\t\t\t\t\t\t<div className={style.your__page}>\r\n                <div className={style.user__photo}>\r\n\t\t\t\t\t\t\t\t<figure>\r\n                \t<img src={\r\n                    profile.photos.large || \r\n                   placeholder} alt=\"avatar\" />\r\n                   {isOwner && \r\n                    <div className=\"mt-3 input-group mb-3\">\r\n                      <div className =\"custom-f</div>ile\"> \r\n                        <input type=\"file\" onChange = {mainPhotoSelected}className =\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" />\r\n                        <label className =\"custom-file-label\" htmlFor=\"inputGroupFile01\">Change photo</label>\r\n                      </div>\r\n                    </div>}\r\n\t\t\t\t\t\t\t\t</figure>\r\n                <ProfileStatuswithHooks status ={status} updateStatus = {updateStatus} />\r\n                </div>\r\n                <div className={style.user__info}>\r\n                    <h2><i className=\"fas fa-info-circle\"></i>About</h2>\r\n                  { editMode \r\n                  ? <ProfileDataForm profile = {profile} initialValues = {profile} onSubmit = {onSubmit} />\r\n                  :  <ProfileData profile = {profile} isOwner = {isOwner} activateEdit = {activateEdit} />\r\n                  }\r\n\r\n    \r\n                </div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n   \r\n    );\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.js'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n\r\n    return(\r\n      <section className = { style.profile }>\r\n        <ProfileInfo \r\n          profile = {props.profile} \r\n          status = {props.status} \r\n          isOwner={props.isOwner} \r\n          updateStatus = {props.updateStatus} \r\n          savePhoto={props.savePhoto} \r\n          saveProfile = {props.saveProfile} />    \r\n        <MyPostsContainer  \r\n        store = {props.store}/>   \r\n      </section>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhotoThunk, saveProfile } from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n   \r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n         this.props.getUserProfileThunk(userId);\r\n         this.props.getStatusThunk(userId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n   \r\n    render() {\r\n        return(\r\n        <Profile {...this.props} \r\n            isOwner = {!this.props.match.params.userId}\r\n            profile = {this.props.profile} \r\n            status = {this.props.status} \r\n            savePhoto = {this.props.savePhotoThunk}\r\n            updateStatus = {this.props.updateStatusThunk}\r\n            saveProfile = {this.props.saveProfile}/>\r\n        );\r\n        }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhotoThunk, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React, { Suspense } from 'react';\nimport {HashRouter, Route, withRouter, Switch, Redirect} from 'react-router-dom';\nimport { Provider, connect } from 'react-redux';\nimport { compose } from 'redux';\nimport store from './redux/reduxStore';\n\nimport style from './App.module.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport Login from './components/Login/Login'\nimport ProfileContainer from './components/Profile/ProfileContainer';\n\nimport {initialiseThunk} from './redux/appReducer';\nimport Preloader from './components/common/preloader';\n\nconst DialogsContainer = React.lazy( () => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy( () => import('./components/Users/UsersContainer'));\n\n\n\n\nclass App extends React.Component {\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\n    debugger;\n    console.error(promiseRejectionEvent);\n  }\n  componentDidMount() {\n    this.props.initialiseThunk();\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n  }\n  componentWillUnmount() {\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n  }\n\n  render() {\n    if(!this.props.initialised) {\n      return <div className = {style.preloaderWrapper}><Preloader /></div>\n    }\n    return ( \n      <div className={ style.wrapper }>\n        <HeaderContainer />\n        <Navbar />\n        <main className={ style.wrapperContent }>\n          <Switch>\n            <Route exact path = '/' render={ () => {return <Redirect to='/profile' />}} />\n            <Route path = '/profile/:userId?' render={ () => \n              <ProfileContainer />} />\n            <Route path = '/dialogs' render={ () => {return <Suspense fallback = {Preloader}>\n              <DialogsContainer />\n            </Suspense> }} />\n            <Route path = '/login' render = {() => <Login /> } />\n            \n            <Route path = '/users' render = { () => {return <Suspense fallback = {Preloader}>\n              <UsersContainer />\n            </Suspense> } } />\n            </Switch>\n        </main> \n      </div> \n    );\n  }\n} \nconst mapStateToProps = (state) => {\nreturn {\n  initialised: state.app.initialised}\n}\nconst AppContainer =  compose(\n\n  withRouter,\n  connect(mapStateToProps, {initialiseThunk}))\n  (App);\n\n\nconst MainApp = (props) => {\n  return  <HashRouter basename={process.env.PUBLIC_URL}>\n  <Provider store = {store}>\n      <AppContainer />\n  </Provider>\n</HashRouter>\n}\n\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MainApp from './App';\n\n\nReactDOM.render(\n   <MainApp />,\n    document.querySelector('#root')\n   );\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3xv7c\",\"serviceBar\":\"Header_serviceBar__PB_82\",\"topSearch\":\"Header_topSearch__-A4wJ\",\"searchBtn\":\"Header_searchBtn__mt2J7\",\"btn\":\"Header_btn__29VYW\",\"login__block\":\"Header_login__block__1sUw3\",\"login\":\"Header_login__2hoNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__4YFbX\",\"newPost\":\"MyPosts_newPost__1Ehw-\",\"postBox\":\"MyPosts_postBox__3zETE\",\"btn\":\"MyPosts_btn__hJGBb\",\"preview\":\"MyPosts_preview__1l45m\",\"liItems\":\"MyPosts_liItems__1dK26\",\"postItems\":\"MyPosts_postItems__21Lnv\"};","import React from 'react';\r\nimport loader from \"../../assets/img/loader.svg\"\r\n\r\nconst Preloader = (props) => {\r\n    return <>\r\n        <img src={loader} alt = \"spinner\" />\r\n\r\n    </>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__NWA0i\",\"postAndAuthor\":\"Post_postAndAuthor__2AnVp\",\"postAuthor\":\"Post_postAuthor__2_Gdp\",\"postText\":\"Post_postText__2pUKE\",\"likeComment\":\"Post_likeComment__2iXbK\"};","module.exports = __webpack_public_path__ + \"static/media/user.a9210b59.png\";","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthcreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2fW0f\",\"wrapperContent\":\"App_wrapperContent__2NBCt\",\"preloaderWrapper\":\"App_preloaderWrapper__1gvDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__control\":\"Forms_form__control__2r_U-\",\"error\":\"Forms_error__2ywVw\",\"checkedLabel\":\"Forms_checkedLabel__36k52\"};"],"sourceRoot":""}