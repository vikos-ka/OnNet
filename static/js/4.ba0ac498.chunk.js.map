{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","style","dialog","to","name","Message","message","maxLength50","maxLengthcreator","NewMessageFormRedux","reduxForm","form","newMessage","onSubmit","handleSubmit","text_area","Field","component","Textarea","validate","required","placeholder","type","Dialogs","state","dialogsPage","dialogItems","dialogs","map","messageItems","messages","isAuth","messagesAndDialogs","message__Item","values","sendMessage","newMessageBody","compose","connect","dispatch","action","sendMessageActionCreator","withAuthRedirect"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,mBAAqB,oCAAoC,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,yBAAyB,UAAY,6B,sFCY5NC,EAPA,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAaC,IAAMC,QAAQ,kBAAC,IAAD,CAASC,GAAML,GAAM,uBAAGE,UAAU,uBAA0BH,EAAMO,QCG3FC,EARC,SAACR,GAEb,OACI,yBAAKG,UAAaC,IAAMK,SAAUT,EAAMS,U,yCCG1CC,EAAcC,YAAiB,IAqD/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACb,GAChB,OACA,0BAAMG,UAAaC,IAAMW,WAAYC,SAAYhB,EAAMiB,cAEnD,yBAAKd,UAAYC,IAAMc,WACnB,kBAACC,EAAA,EAAD,CAAOC,UAAaC,IAAUC,SAAY,CAAEC,IAAUb,GAAcH,KAAO,iBAC3EiB,YAAY,oBACX,4BAAQrB,UAAY,MAAMsB,KAAM,UAAU,uBAAGtB,UAAU,8BAQzDuB,EArDC,SAAC1B,GAGb,IAAI2B,EAAQ3B,EAAM4B,YAGdC,EAAcF,EAAMG,QAAQC,KAAK,SAAA1B,GAAM,OACvB,kBAAC,EAAD,CAAQH,GAAMG,EAAOH,GAAIK,KAAQF,EAAOE,UACxDyB,EAAeL,EAAMM,SAASF,KAAK,SAAAtB,GAAO,OAC1B,kBAAC,EAAD,CAASP,GAAMO,EAAQP,GAAIO,QAAWA,EAAQA,aAQlE,OAAKT,EAAMkC,OAGP,6BAAS/B,UAAaC,IAAM+B,oBAExB,yBAAKhC,UAAaC,IAAMyB,aAEpB,uCACCA,GAGL,yBAAK1B,UAAaC,IAAM6B,UACpB,wCACA,yBAAK9B,UAAaC,IAAMgC,eAAgBJ,GACpC,kBAACpB,EAAD,CAAqBI,SAnBf,SAACqB,GACnBrC,EAAMsC,YAAYD,EAAOE,qBAIH,kBAAC,IAAD,CAAUjC,GAAI,Y,iCCL7BkC,sBACXC,aAjBoB,SAACd,GAErB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACc,GACxB,MAAO,CACHJ,YAAa,SAACC,GACV,IAAMI,EAASC,YAAyBL,GACxCG,EAASC,QAOjBE,IAFWL,CAGbd","file":"static/js/4.ba0ac498.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesAndDialogs\":\"Dialogs_messagesAndDialogs__2KDZF\",\"dialogItems\":\"Dialogs_dialogItems__1eNyT\",\"messages\":\"Dialogs_messages__3_gvz\",\"dialog\":\"Dialogs_dialog__34PDa\",\"message\":\"Dialogs_message__2YSBT\",\"text_area\":\"Dialogs_text_area__1sV73\"};","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className = {style.dialog}><NavLink to = {path}><i className=\"fas fa-user-circle\"></i>{props.name}</NavLink></div>\r\n    ) \r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className = {style.message}>{props.message}</div>\r\n    ) \r\n};\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/Forms';\r\nimport {required, maxLengthcreator} from '../../utils/validators/validators'\r\n\r\n\r\nconst maxLength50 = maxLengthcreator(50);\r\n\r\nconst Dialogs = (props) => { \r\n    debugger;\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogItems = state.dialogs.map( dialog => \r\n                        <Dialog id = {dialog.id} name = {dialog.name}/>)\r\n    let messageItems = state.messages.map( message => \r\n                        <Message id = {message.id} message = {message.message} />)\r\n\r\n\r\n    const addNewMessage = (values) =>{\r\n        props.sendMessage(values.newMessageBody)\r\n        \r\n      \r\n    }\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <section className = {style.messagesAndDialogs}>\r\n            \r\n            <div className = {style.dialogItems}>\r\n\r\n                <h4>Dialogs</h4>\r\n                {dialogItems} \r\n            </div>\r\n\r\n            <div className = {style.messages}>\r\n                <h4>Messages</h4>\r\n                <div className = {style.message__Item}>{messageItems}</div>\r\n                    <NewMessageFormRedux onSubmit = {addNewMessage}/>            \r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\n\r\nconst NewMessageForm = (props) => {\r\n        return (\r\n        <form className = {style.newMessage} onSubmit = {props.handleSubmit}>\r\n\t\t\t\r\n            <div className ={style.text_area}>\r\n                <Field component = {Textarea} validate = {[ required, maxLength50]} name = \"newMessageBody\" \r\n                placeholder=\"Write a message\" />\r\n                 <button className = \"btn\" type= \"submit\" ><i className=\"fa fa-paper-plane-o\"></i></button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst NewMessageFormRedux = reduxForm({form: 'dialogNewMessageForm'})(NewMessageForm);\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs'\r\nimport {sendMessageActionCreator} from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            const action = sendMessageActionCreator(newMessageBody);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);  \r\n"],"sourceRoot":""}